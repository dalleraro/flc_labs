
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Thu Jun 15 14:30:25 CEST 2017
//----------------------------------------------------

import java_cup.runtime.*;

/** CUP v0.10k generated parser.
  * @version Thu Jun 15 14:30:25 CEST 2017
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\020\000\002\002\004\000\002\003\006\000\002\004" +
    "\005\000\002\004\004\000\002\005\006\000\002\006\005" +
    "\000\002\006\003\000\002\007\014\000\002\007\013\000" +
    "\002\007\007\000\002\010\005\000\002\010\004\000\002" +
    "\011\005\000\002\012\005\000\002\012\003\000\002\013" +
    "\010" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\054\000\004\004\005\001\002\000\004\012\056\001" +
    "\002\000\004\010\036\001\002\000\006\004\005\020\012" +
    "\001\002\000\004\002\010\001\002\000\004\002\001\001" +
    "\002\000\004\012\035\001\002\000\004\020\013\001\002" +
    "\000\004\004\016\001\002\000\004\012\034\001\002\000" +
    "\006\002\000\004\016\001\002\000\004\011\017\001\002" +
    "\000\004\015\022\001\002\000\006\012\ufff3\013\ufff3\001" +
    "\002\000\006\012\ufff5\013\030\001\002\000\004\017\023" +
    "\001\002\000\004\015\024\001\002\000\004\017\025\001" +
    "\002\000\004\015\026\001\002\000\004\005\027\001\002" +
    "\000\006\012\ufff2\013\ufff2\001\002\000\004\015\022\001" +
    "\002\000\006\012\ufff4\013\ufff4\001\002\000\004\012\033" +
    "\001\002\000\006\002\ufff7\004\ufff7\001\002\000\006\002" +
    "\ufff6\004\ufff6\001\002\000\006\004\uffff\020\uffff\001\002" +
    "\000\004\014\037\001\002\000\004\005\041\001\002\000" +
    "\006\012\ufffb\013\ufffb\001\002\000\004\011\045\001\002" +
    "\000\006\012\ufffd\013\043\001\002\000\004\005\041\001" +
    "\002\000\006\012\ufffc\013\ufffc\001\002\000\004\004\046" +
    "\001\002\000\004\011\047\001\002\000\004\015\050\001" +
    "\002\000\010\011\051\012\ufff8\013\ufff8\001\002\000\004" +
    "\006\052\001\002\000\004\007\053\001\002\000\004\015" +
    "\054\001\002\000\010\012\ufff9\013\ufff9\016\055\001\002" +
    "\000\006\012\ufffa\013\ufffa\001\002\000\006\004\ufffe\020" +
    "\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\054\000\010\003\006\004\005\005\003\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\010\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\010\014\011\013\001\001\000\002" +
    "\001\001\000\004\011\031\001\001\000\002\001\001\000" +
    "\006\012\020\013\017\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\013\030\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\041\007\037\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\043\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 Tree= new DisegnaAlbero();   }public static DisegnaAlbero Tree;

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 Symbol s=_scanner.next_token(); Tree.push(s.toString(), 0); return s;   }



   public void report_error(String message, Object info) {
      System.err.print("ERROR: Syntax error");
      if(info instanceof Symbol)
         if(((Symbol)info).left != -1){
            int line = (((Symbol)info).left)+1;
            int column = (((Symbol)info).right)+1;
            System.err.print(" (linea "+line+", colonna "+column+"): ");
         } else System.err.print(": ");
      else System.err.print(": ");
   }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // l ::= N SL N SL N ISBN 
            { parser.Tree.reduce(6,"l",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*l*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ll ::= l 
            { parser.Tree.reduce(1,"ll",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*ll*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ll ::= ll CM l 
            { parser.Tree.reduce(3,"ll",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(8/*ll*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // u ::= NAME C ll 
            { parser.Tree.reduce(3,"u",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*u*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ul ::= u S 
            { parser.Tree.reduce(2,"ul",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*ul*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ul ::= ul u S 
            { parser.Tree.reduce(3,"ul",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*ul*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // b ::= ISBN C NAME C N 
            { parser.Tree.reduce(5,"b",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*b*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // b ::= ISBN C NAME C N C LT GE N 
            { parser.Tree.reduce(9,"b",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*b*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // b ::= ISBN C NAME C N C LT GE N L 
            { parser.Tree.reduce(10,"b",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*b*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // bl ::= b 
            { parser.Tree.reduce(1,"bl",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*bl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // bl ::= bl CM b 
            { parser.Tree.reduce(3,"bl",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*bl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // w ::= NAME D MAJ bl 
            { parser.Tree.reduce(4,"w",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*w*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // wl ::= w S 
            { parser.Tree.reduce(2,"wl",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*wl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // wl ::= wl w S 
            { parser.Tree.reduce(3,"wl",0);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*wl*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // lib ::= wl PERC PERC ul 
            { parser.Tree.reduce(4,"lib",1);
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(1/*lib*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= lib EOF 
            { 
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

